"""–û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏"""

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from keyboards.user import get_main_menu, get_contacts_keyboard
from keyboards.admin import get_admin_panel
from keyboards.reply import (
    get_client_main_keyboard, get_agent_main_keyboard, get_admin_main_keyboard,
    remove_keyboard, get_cancel_keyboard
)
from database import db
from utils.texts import START_MESSAGE, CONTACTS_MESSAGE, CANCEL_MESSAGE
from config import ADMINS, AGENTS, USER_ROLES


router = Router()


class TicketStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è"""
    waiting_category = State()
    waiting_subject = State() 
    waiting_description = State()
    waiting_response = State()


class AdminStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    waiting_response = State()
    waiting_search = State()
    waiting_admin_id = State()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    await state.clear()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await db.add_user(
        user_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_role = await db.get_user_role(message.from_user.id)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–æ–ª—å –∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤
    if message.from_user.id in ADMINS:
        correct_role = 'admin'
    elif message.from_user.id in AGENTS:
        correct_role = 'agent'
    else:
        correct_role = 'client'
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î –∏–ª–∏ —Ä–æ–ª—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –æ–±–Ω–æ–≤–ª—è–µ–º
    if not user_role or user_role != correct_role:
        user_role = correct_role
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await db.set_user_role(message.from_user.id, user_role)
    
    # –ö–∞–∂–¥–∞—è —Ä–æ–ª—å –≤ –°–í–û–Å–ú –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
    if user_role == 'admin':
        # –ê–¥–º–∏–Ω –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        role_name = USER_ROLES.get(user_role, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
        welcome_text = f"{START_MESSAGE}\n\nüë§ <b>–†–µ–∂–∏–º:</b> {role_name}"
        reply_keyboard = get_admin_main_keyboard()
        inline_keyboard = get_admin_panel()
    elif user_role == 'agent':
        # –ê–≥–µ–Ω—Ç –≤ –∞–≥–µ–Ω—Ç—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ (–ë–ï–ó –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π)
        role_name = USER_ROLES.get(user_role, '–ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏')
        welcome_text = f"{START_MESSAGE}\n\nüë§ <b>–†–µ–∂–∏–º:</b> {role_name}"
        reply_keyboard = get_agent_main_keyboard(show_admin_return=False)  # –ë–ï–ó –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∫–∏
        from keyboards.admin import get_agent_panel
        inline_keyboard = get_agent_panel()
    else:
        # –ö–ª–∏–µ–Ω—Ç –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        welcome_text = START_MESSAGE
        reply_keyboard = get_client_main_keyboard()  # –£–ø—Ä–æ—â–∞–µ–º
        inline_keyboard = get_main_menu()
    
    await message.answer(
        welcome_text,
        reply_markup=reply_keyboard,
        parse_mode="HTML"
    )


@router.callback_query(F.data == "main_menu")
async def show_main_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —Ä–æ–ª–∏"""
    await state.clear()
    
    user_role = await db.get_user_role(callback.from_user.id)
    
    if user_role == 'admin':
        # –ê–¥–º–∏–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
        inline_keyboard = get_admin_panel()
        text = f"{START_MESSAGE}\n\nüë§ <b>–†–µ–∂–∏–º:</b> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    elif user_role == 'agent':
        # –ê–≥–µ–Ω—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∞–≥–µ–Ω—Ç—Å–∫—É—é –ø–∞–Ω–µ–ª—å
        from keyboards.admin import get_agent_panel
        inline_keyboard = get_agent_panel()
        text = f"{START_MESSAGE}\n\nüë§ <b>–†–µ–∂–∏–º:</b> –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
    else:
        # –ö–ª–∏–µ–Ω—Ç –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é
        inline_keyboard = get_main_menu()
        text = START_MESSAGE
    
    await callback.message.edit_text(
        text,
        reply_markup=inline_keyboard,
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "admin_panel")
async def show_admin_panel(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"""
    await state.clear()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–≥–µ–Ω—Ç–∞ –∏–ª–∏ –∞–¥–º–∏–Ω–∞
    user_role = await db.get_user_role(callback.from_user.id)
    if user_role not in ['agent', 'admin']:
        from utils.texts import PERMISSION_DENIED
        await callback.answer(PERMISSION_DENIED, show_alert=True)
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = await db.get_ticket_stats()
    
    stats_text = f"""
üìä <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏–π: {stats.get('total', 0)}
‚Ä¢ –ù–æ–≤—ã—Ö: {stats.get('status_new', 0)}
‚Ä¢ –í —Ä–∞–±–æ—Ç–µ: {stats.get('status_in_progress', 0)}
‚Ä¢ –û–∂–∏–¥–∞—é—Ç –æ—Ç–≤–µ—Ç–∞: {stats.get('status_waiting_response', 0)}
‚Ä¢ –†–µ—à–µ–Ω–æ: {stats.get('status_resolved', 0)}
‚Ä¢ –ó–∞–∫—Ä—ã—Ç–æ: {stats.get('status_closed', 0)}
"""
    
    from utils.texts import ADMIN_PANEL_MESSAGE
    await callback.message.edit_text(
        ADMIN_PANEL_MESSAGE.format(stats=stats_text),
        reply_markup=get_admin_panel(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "contacts")
async def show_contacts(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã"""
    await callback.message.edit_text(
        CONTACTS_MESSAGE,
        reply_markup=get_contacts_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "cancel")
async def cancel_action(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"""
    await state.clear()
    await callback.message.edit_text(
        CANCEL_MESSAGE,
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "refresh")
async def refresh_menu(callback: CallbackQuery):
    """–û–±–Ω–æ–≤–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.message.edit_text(
        START_MESSAGE,
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )
    await callback.answer("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ!")


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = """
<b>ü§ñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π
‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

<b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ:</b>
1. –ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ"
2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
3. –£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É
4. –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ

<b>–°—Ç–∞—Ç—É—Å—ã –æ–±—Ä–∞—â–µ–Ω–∏–π:</b>
üÜï –ù–æ–≤–æ–µ - –æ–±—Ä–∞—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω–æ
‚è≥ –í —Ä–∞–±–æ—Ç–µ - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –ø—Ä–æ–±–ª–µ–º–æ–π
‚è∞ –û–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞ - –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –≤–∞—Å
‚úÖ –†–µ—à–µ–Ω–æ - –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞
üîí –ó–∞–∫—Ä—ã—Ç–æ - –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ

üí° <i>–ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤—ã –æ–ø–∏—à–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –º—ã —Å–º–æ–∂–µ–º –ø–æ–º–æ—á—å!</i>
"""
    
    await message.answer(help_text, parse_mode="HTML", reply_markup=get_main_menu())


@router.message(Command("admin"))
async def cmd_admin(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    user_role = await db.get_user_role(message.from_user.id)
    if user_role != 'admin':
        await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = await db.get_ticket_stats()
    
    stats_text = f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π:</b>
‚Ä¢ –í—Å–µ–≥–æ: {stats.get('total', 0)}
‚Ä¢ –ù–æ–≤—ã—Ö: {stats.get('status_new', 0)}
‚Ä¢ –í —Ä–∞–±–æ—Ç–µ: {stats.get('status_in_progress', 0)}
‚Ä¢ –†–µ—à–µ–Ω–æ: {stats.get('status_resolved', 0)}
"""
    
    from utils.texts import ADMIN_PANEL_MESSAGE
    await message.answer(
        ADMIN_PANEL_MESSAGE.format(stats=stats_text),
        reply_markup=get_admin_panel(),
        parse_mode="HTML"
    )


# ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò REPLY –ö–ù–û–ü–û–ö =====

@router.message(F.text.in_(["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å"]))
async def handle_main_menu_button(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    await state.clear()
    
    user_role = await db.get_user_role(message.from_user.id)
    
    # –ö–∞–∂–¥–∞—è —Ä–æ–ª—å –≤ –°–í–û–Å–ú –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ 
    if user_role == 'admin':
        # –ê–¥–º–∏–Ω –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        role_name = USER_ROLES.get(user_role, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
        welcome_text = f"{START_MESSAGE}\n\nüë§ <b>–†–µ–∂–∏–º:</b> {role_name}"
        reply_keyboard = get_admin_main_keyboard()
        inline_keyboard = get_admin_panel()
    elif user_role == 'agent':
        # –ê–≥–µ–Ω—Ç –≤ –∞–≥–µ–Ω—Ç—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏ (–ë–ï–ó –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π)
        role_name = USER_ROLES.get(user_role, '–ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏') 
        welcome_text = f"{START_MESSAGE}\n\nüë§ <b>–†–µ–∂–∏–º:</b> {role_name}"
        reply_keyboard = get_agent_main_keyboard(show_admin_return=False)  # –ë–ï–ó –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∫–∏
        from keyboards.admin import get_agent_panel
        inline_keyboard = get_agent_panel()
    else:
        # –ö–ª–∏–µ–Ω—Ç –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        welcome_text = START_MESSAGE
        reply_keyboard = get_client_main_keyboard()  # –£–ø—Ä–æ—â–∞–µ–º –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
        inline_keyboard = get_main_menu()
    
    await message.answer(
        welcome_text,
        reply_markup=reply_keyboard,
        parse_mode="HTML"
    )


@router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def handle_help_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–º–æ—â–∏"""
    help_text = """
<b>ü§ñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞  
/role - –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–π —Ä–æ–ª–∏

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤:</b>
üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π
‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤:</b>
üé´ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤
üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã
üîç –ü–æ–∏—Å–∫ –ø–æ –æ–±—Ä–∞—â–µ–Ω–∏—è–º

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤:</b>
üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –∞–≥–µ–Ω—Ç–∞–º–∏
üìà –ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞

üí° <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!</i>
"""
    
    user_role = await db.get_user_role(message.from_user.id)
    if user_role == 'admin':
        keyboard = get_admin_main_keyboard()
    elif user_role == 'agent':
        keyboard = get_agent_main_keyboard()
    else:
        keyboard = get_client_main_keyboard()
    
    await message.answer(help_text, parse_mode="HTML", reply_markup=keyboard)


# –£–ë–†–ê–õ–ò –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –†–ï–ñ–ò–ú–û–í - –∫–∞–∂–¥–∞—è —Ä–æ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å–≤–æ—ë–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ


@router.message(Command("role"))
async def cmd_role(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π —Ä–æ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞)"""
    user_role = await db.get_user_role(message.from_user.id)
    
    if user_role == 'client':
        # –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –≤–º–µ—Å—Ç–æ —Ä–æ–ª–∏
        help_text = """
<b>ü§ñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>

<b>–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
‚Ä¢ üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π  
‚Ä¢ üí¨ –ü–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
‚Ä¢ ‚ùì –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–æ–≤ –≤ FAQ
‚Ä¢ üìû –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

<b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ:</b>
1. –ù–∞–∂–º–∏—Ç–µ "üìù –°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ"
2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–∞
3. –£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –ø—Ä–æ–±–ª–µ–º—ã
4. –û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–æ

üí° <i>–ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤—ã –æ–ø–∏—à–µ—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –º—ã —Å–º–æ–∂–µ–º –ø–æ–º–æ—á—å!</i>
"""
        keyboard = get_client_main_keyboard()
    else:
        # –î–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏
        role_name = USER_ROLES.get(user_role, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        
        permissions_text = ""
        if user_role == 'agent':
            permissions_text = """
<b>–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –æ–±—Ä–∞—â–µ–Ω–∏–π
‚Ä¢ –û—Ç–≤–µ—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞–º
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã
‚Ä¢ –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞
"""
        elif user_role == 'admin':
            permissions_text = """
<b>–í–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –ü–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π
‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
‚Ä¢ –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–æ–≤ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
"""
        
        help_text = f"""
üë§ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏</b>

<b>–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º:</b> {role_name}
<b>ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:</b> {message.from_user.id}

{permissions_text}

<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏ —Ä–∞–±–æ—Ç—ã.</i>
"""
        
        keyboard = get_admin_main_keyboard() if user_role == 'admin' else get_agent_main_keyboard()
    
    await message.answer(help_text, parse_mode="HTML", reply_markup=keyboard)


@router.message(StateFilter(None))
async def unknown_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_role = await db.get_user_role(message.from_user.id)
    
    if user_role == 'admin':
        keyboard = get_admin_main_keyboard()
    elif user_role == 'agent':
        keyboard = get_agent_main_keyboard()
    else:
        keyboard = get_client_main_keyboard()
    
    await message.answer(
        "ü§î –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=keyboard
    )